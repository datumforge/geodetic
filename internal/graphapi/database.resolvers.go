package graphapi

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen

import (
	"context"
	"fmt"

	"github.com/datumforge/geodetic/internal/ent/generated"
)

// CreateDatabase is the resolver for the createDatabase field.
func (r *mutationResolver) CreateDatabase(ctx context.Context, input generated.CreateDatabaseInput) (*DatabaseCreatePayload, error) {
	panic(fmt.Errorf("not implemented: CreateDatabase - createDatabase"))
}

// UpdateDatabase is the resolver for the updateDatabase field.
func (r *mutationResolver) UpdateDatabase(ctx context.Context, id string, input generated.UpdateDatabaseInput) (*DatabaseUpdatePayload, error) {
	panic(fmt.Errorf("not implemented: UpdateDatabase - updateDatabase"))
}

// DeleteDatabase is the resolver for the deleteDatabase field.
func (r *mutationResolver) DeleteDatabase(ctx context.Context, id string) (*DatabaseDeletePayload, error) {
	panic(fmt.Errorf("not implemented: DeleteDatabase - deleteDatabase"))
}

// Database is the resolver for the database field.
func (r *queryResolver) Database(ctx context.Context, id string) (*generated.Database, error) {
	panic(fmt.Errorf("not implemented: Database - database"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
